#    if (!inherits(cdffitn, "try-error"))
#    {
#      cdffit <- cdffitn;
#    }
#  }
lines(logisticpdf(c(1:length(datsetone)),cdffit$ro,cdffit$to)/cdffit$defecitRatio,lty=3,col="green")
#  if (numdays ==  lastobs)
#  {
datasetOptimist <- datasetone;
maxgain <- min(0.9/max(datasetOptimist$fatalities),optGain);
datasetOptimist$fatalities <- maxgain*datasetOptimist$fatalities;
datasetOptimist$newfatalities <- maxgain*datasetOptimist$newfatalities;
cdffitglobal2 <- logisitcfit(datasetOptimist,-0.075,numdays,2)
cdffit2 <- logisitcfit(datasetOptimist,cdffitglobal2$ro,cdffitglobal2$to,2*cdffitglobal2$defecitRatio,adjini=cdffitglobal2$defecitRatio,daysrange=daysrange)
if (!inherits(cdffit2, "try-error"))
{
lines(logisticpdf(c(1:length(datsetone)),cdffit2$ro,cdffit2$to)/cdffit2$defecitRatio/maxgain,lty=4,col="pink")
}
#}
legend("topleft",
legend = c("New Fatalities","Smooth","Global Fit","Last Trend Fit","Optimistic Trend Fit"),
col = c(1,"red","blue","green","pink"),
lty = c(NA,1,2,3,4),
lwd = c(1,1,1,1,1),
pch = c(1,NA,NA,NA,NA),
cex=0.85)
#  datasetOptimist <- datasetone;
athedates <- thedates[c(1:length(thedates)) %% 7 == 1]
cn = 6
thepeakdates <- character(6);
countryNumber <- cn
mainName <- names(totaldeaths[countryNumber])
datsetone <- as.numeric(time_covid19CountryPerc[names(totaldeaths[countryNumber]),])
thedates <- colnames(time_covid19CountryPerc)[datsetone > 0.0]
thedates <- str_replace(thedates,"X","")
thedates <- str_replace_all(thedates,"\\.","/")
thedates <- as.Date(thedates,"%m/%d/%Y")
thedates <- as.Date(str_replace(thedates,"0020-","2020-"))
datsetone <- datsetone[datsetone > 0.0]
lastobs <- length(datsetone)
datsetchange <- c(datsetone[1],datsetone[2:lastobs]-datsetone[1:(lastobs-1)])
datsetchange[datsetchange < 0] <- 0;
datasetone <- as.data.frame(cbind(days=c(1:lastobs),fatalities = datsetone,newfatalities = datsetchange))
filteredNewFatalities <-  runmed(datasetone$newfatalities,5)
#  lastobs <- nrow(datasetone) - 1;
numdays <- min(lastobs,which.max(filteredNewFatalities)+14)
if (numdays < (lastobs-7))
{
#    numdays <- which.max(filteredNewFatalities)
if (max(datasetone$fatalities) < 0.3)
{
gain <- 0.25/max(datasetone$fatalities);
datasetone$fatalities <- gain*datasetone$fatalities;
datasetone$newfatalities <- gain*datasetone$newfatalities;
covid19_datapopulation[mainName,"ExpectedFatalities"] <- covid19_datapopulation[mainName,"ExpectedFatalities"]/gain;
}
}
plot(datasetone$newfatalities,main=paste("New Deaths:",mainName),xlab="Days since deaths>0",ylab="Fraction of expected deaths")
startday <- max(1,(numdays - daysWindow))
daysrange <- c(startday:(lastobs))
cdffitglobal <- logisitcfit(datasetone[1:numdays,],-0.075,numdays,5)
lines(logisticpdf(c(1:length(datsetone)),cdffitglobal$ro,cdffitglobal$to)/cdffitglobal$defecitRatio,lty=2,col="blue")
cdffit <- logisitcfit(datasetone,
cdffitglobal$ro,
cdffitglobal$to,
2*cdffitglobal$defecitRatio,
adjini=cdffitglobal$defecitRatio,
daysrange=daysrange)
lines(cdffit$filterpdf,lty=1,col="red")
if (inherits(cdffit, "try-error"))
{
startday <- max(1,(numdays - daysWindow -7))
daysrange <- c(startday:(lastobs))
cdffit <- logisitcfit(datasetone,cdffitglobal$ro,cdffitglobal$to,2*cdffitglobal$defecitRatio,adjini=cdffitglobal$defecitRatio,daysrange=daysrange)
}
#  lines(logisticpdf(c(1:length(datsetone)),cdffit$ro,cdffit$to)/cdffit$adjust,lty=5,col="green")
#  daystopeak <- cdffit$to-lastobs
#  if (daystopeak <= -14)
#  {
#    pstartday <- as.integer(max(1,lastobs - 2.0*daysWindow))
#    pdaysrange <- c(pstartday:(lastobs))
#    daysrange <- pdaysrange
#    cdffitn <- logisitcfit(datasetone,cdffit$ro,cdffit$to,2*cdffit$defecitRatio,cdffit$defecitRatio,daysrange=pdaysrang#e)
#    if (!inherits(cdffitn, "try-error"))
#    {
#      cdffit <- cdffitn;
#    }
#  }
lines(logisticpdf(c(1:length(datsetone)),cdffit$ro,cdffit$to)/cdffit$defecitRatio,lty=3,col="green")
#  if (numdays ==  lastobs)
#  {
datasetOptimist <- datasetone;
maxgain <- min(0.9/max(datasetOptimist$fatalities),optGain);
datasetOptimist$fatalities <- maxgain*datasetOptimist$fatalities;
datasetOptimist$newfatalities <- maxgain*datasetOptimist$newfatalities;
cdffitglobal2 <- logisitcfit(datasetOptimist,-0.075,numdays,2)
cdffit2 <- logisitcfit(datasetOptimist,cdffitglobal2$ro,cdffitglobal2$to,2*cdffitglobal2$defecitRatio,adjini=cdffitglobal2$defecitRatio,daysrange=daysrange)
if (!inherits(cdffit2, "try-error"))
{
lines(logisticpdf(c(1:length(datsetone)),cdffit2$ro,cdffit2$to)/cdffit2$defecitRatio/maxgain,lty=4,col="pink")
}
#}
legend("topleft",
legend = c("New Fatalities","Smooth","Global Fit","Last Trend Fit","Optimistic Trend Fit"),
col = c(1,"red","blue","green","pink"),
lty = c(NA,1,2,3,4),
lwd = c(1,1,1,1,1),
pch = c(1,NA,NA,NA,NA),
cex=0.85)
cn = 8
thepeakdates <- character(6);
countryNumber <- cn
mainName <- names(totaldeaths[countryNumber])
datsetone <- as.numeric(time_covid19CountryPerc[names(totaldeaths[countryNumber]),])
thedates <- colnames(time_covid19CountryPerc)[datsetone > 0.0]
thedates <- str_replace(thedates,"X","")
thedates <- str_replace_all(thedates,"\\.","/")
thedates <- as.Date(thedates,"%m/%d/%Y")
thedates <- as.Date(str_replace(thedates,"0020-","2020-"))
datsetone <- datsetone[datsetone > 0.0]
lastobs <- length(datsetone)
datsetchange <- c(datsetone[1],datsetone[2:lastobs]-datsetone[1:(lastobs-1)])
datsetchange[datsetchange < 0] <- 0;
datasetone <- as.data.frame(cbind(days=c(1:lastobs),fatalities = datsetone,newfatalities = datsetchange))
filteredNewFatalities <-  runmed(datasetone$newfatalities,5)
#  lastobs <- nrow(datasetone) - 1;
numdays <- min(lastobs,which.max(filteredNewFatalities)+14)
if (numdays < (lastobs-7))
{
#    numdays <- which.max(filteredNewFatalities)
if (max(datasetone$fatalities) < 0.3)
{
gain <- 0.25/max(datasetone$fatalities);
datasetone$fatalities <- gain*datasetone$fatalities;
datasetone$newfatalities <- gain*datasetone$newfatalities;
covid19_datapopulation[mainName,"ExpectedFatalities"] <- covid19_datapopulation[mainName,"ExpectedFatalities"]/gain;
}
}
plot(datasetone$newfatalities,main=paste("New Deaths:",mainName),xlab="Days since deaths>0",ylab="Fraction of expected deaths")
startday <- max(1,(numdays - daysWindow))
daysrange <- c(startday:(lastobs))
cdffitglobal <- logisitcfit(datasetone[1:numdays,],-0.075,numdays,5)
lines(logisticpdf(c(1:length(datsetone)),cdffitglobal$ro,cdffitglobal$to)/cdffitglobal$defecitRatio,lty=2,col="blue")
cdffit <- logisitcfit(datasetone,
cdffitglobal$ro,
cdffitglobal$to,
2*cdffitglobal$defecitRatio,
adjini=cdffitglobal$defecitRatio,
daysrange=daysrange)
lines(cdffit$filterpdf,lty=1,col="red")
if (inherits(cdffit, "try-error"))
{
startday <- max(1,(numdays - daysWindow -7))
daysrange <- c(startday:(lastobs))
cdffit <- logisitcfit(datasetone,cdffitglobal$ro,cdffitglobal$to,2*cdffitglobal$defecitRatio,adjini=cdffitglobal$defecitRatio,daysrange=daysrange)
}
#  lines(logisticpdf(c(1:length(datsetone)),cdffit$ro,cdffit$to)/cdffit$adjust,lty=5,col="green")
#  daystopeak <- cdffit$to-lastobs
#  if (daystopeak <= -14)
#  {
#    pstartday <- as.integer(max(1,lastobs - 2.0*daysWindow))
#    pdaysrange <- c(pstartday:(lastobs))
#    daysrange <- pdaysrange
#    cdffitn <- logisitcfit(datasetone,cdffit$ro,cdffit$to,2*cdffit$defecitRatio,cdffit$defecitRatio,daysrange=pdaysrang#e)
#    if (!inherits(cdffitn, "try-error"))
#    {
#      cdffit <- cdffitn;
#    }
#  }
lines(logisticpdf(c(1:length(datsetone)),cdffit$ro,cdffit$to)/cdffit$defecitRatio,lty=3,col="green")
#  if (numdays ==  lastobs)
#  {
datasetOptimist <- datasetone;
maxgain <- min(0.9/max(datasetOptimist$fatalities),optGain);
datasetOptimist$fatalities <- maxgain*datasetOptimist$fatalities;
datasetOptimist$newfatalities <- maxgain*datasetOptimist$newfatalities;
cdffitglobal2 <- logisitcfit(datasetOptimist,-0.075,numdays,2)
cdffit2 <- logisitcfit(datasetOptimist,cdffitglobal2$ro,cdffitglobal2$to,2*cdffitglobal2$defecitRatio,adjini=cdffitglobal2$defecitRatio,daysrange=daysrange)
if (!inherits(cdffit2, "try-error"))
{
lines(logisticpdf(c(1:length(datsetone)),cdffit2$ro,cdffit2$to)/cdffit2$defecitRatio/maxgain,lty=4,col="pink")
}
#}
legend("topleft",
legend = c("New Fatalities","Smooth","Global Fit","Last Trend Fit","Optimistic Trend Fit"),
col = c(1,"red","blue","green","pink"),
lty = c(NA,1,2,3,4),
lwd = c(1,1,1,1,1),
pch = c(1,NA,NA,NA,NA),
cex=0.85)
#  datasetOptimist <- datasetone;
athedates <- thedates[c(1:length(thedates)) %% 7 == 1]
cn = 9
thepeakdates <- character(6);
countryNumber <- cn
mainName <- names(totaldeaths[countryNumber])
datsetone <- as.numeric(time_covid19CountryPerc[names(totaldeaths[countryNumber]),])
thedates <- colnames(time_covid19CountryPerc)[datsetone > 0.0]
thedates <- str_replace(thedates,"X","")
thedates <- str_replace_all(thedates,"\\.","/")
thedates <- as.Date(thedates,"%m/%d/%Y")
thedates <- as.Date(str_replace(thedates,"0020-","2020-"))
datsetone <- datsetone[datsetone > 0.0]
lastobs <- length(datsetone)
datsetchange <- c(datsetone[1],datsetone[2:lastobs]-datsetone[1:(lastobs-1)])
datsetchange[datsetchange < 0] <- 0;
datasetone <- as.data.frame(cbind(days=c(1:lastobs),fatalities = datsetone,newfatalities = datsetchange))
filteredNewFatalities <-  runmed(datasetone$newfatalities,5)
#  lastobs <- nrow(datasetone) - 1;
numdays <- min(lastobs,which.max(filteredNewFatalities)+14)
if (numdays < (lastobs-7))
{
#    numdays <- which.max(filteredNewFatalities)
if (max(datasetone$fatalities) < 0.3)
{
gain <- 0.25/max(datasetone$fatalities);
datasetone$fatalities <- gain*datasetone$fatalities;
datasetone$newfatalities <- gain*datasetone$newfatalities;
covid19_datapopulation[mainName,"ExpectedFatalities"] <- covid19_datapopulation[mainName,"ExpectedFatalities"]/gain;
}
}
plot(datasetone$newfatalities,main=paste("New Deaths:",mainName),xlab="Days since deaths>0",ylab="Fraction of expected deaths")
startday <- max(1,(numdays - daysWindow))
daysrange <- c(startday:(lastobs))
cdffitglobal <- logisitcfit(datasetone[1:numdays,],-0.075,numdays,5)
lines(logisticpdf(c(1:length(datsetone)),cdffitglobal$ro,cdffitglobal$to)/cdffitglobal$defecitRatio,lty=2,col="blue")
cdffit <- logisitcfit(datasetone,
cdffitglobal$ro,
cdffitglobal$to,
2*cdffitglobal$defecitRatio,
adjini=cdffitglobal$defecitRatio,
daysrange=daysrange)
lines(cdffit$filterpdf,lty=1,col="red")
if (inherits(cdffit, "try-error"))
{
startday <- max(1,(numdays - daysWindow -7))
daysrange <- c(startday:(lastobs))
cdffit <- logisitcfit(datasetone,cdffitglobal$ro,cdffitglobal$to,2*cdffitglobal$defecitRatio,adjini=cdffitglobal$defecitRatio,daysrange=daysrange)
}
#  lines(logisticpdf(c(1:length(datsetone)),cdffit$ro,cdffit$to)/cdffit$adjust,lty=5,col="green")
#  daystopeak <- cdffit$to-lastobs
#  if (daystopeak <= -14)
#  {
#    pstartday <- as.integer(max(1,lastobs - 2.0*daysWindow))
#    pdaysrange <- c(pstartday:(lastobs))
#    daysrange <- pdaysrange
#    cdffitn <- logisitcfit(datasetone,cdffit$ro,cdffit$to,2*cdffit$defecitRatio,cdffit$defecitRatio,daysrange=pdaysrang#e)
#    if (!inherits(cdffitn, "try-error"))
#    {
#      cdffit <- cdffitn;
#    }
#  }
lines(logisticpdf(c(1:length(datsetone)),cdffit$ro,cdffit$to)/cdffit$defecitRatio,lty=3,col="green")
#  if (numdays ==  lastobs)
#  {
datasetOptimist <- datasetone;
maxgain <- min(0.9/max(datasetOptimist$fatalities),optGain);
datasetOptimist$fatalities <- maxgain*datasetOptimist$fatalities;
datasetOptimist$newfatalities <- maxgain*datasetOptimist$newfatalities;
cdffitglobal2 <- logisitcfit(datasetOptimist,-0.075,numdays,2)
cdffit2 <- logisitcfit(datasetOptimist,cdffitglobal2$ro,cdffitglobal2$to,2*cdffitglobal2$defecitRatio,adjini=cdffitglobal2$defecitRatio,daysrange=daysrange)
if (!inherits(cdffit2, "try-error"))
{
lines(logisticpdf(c(1:length(datsetone)),cdffit2$ro,cdffit2$to)/cdffit2$defecitRatio/maxgain,lty=4,col="pink")
}
#}
legend("topleft",
legend = c("New Fatalities","Smooth","Global Fit","Last Trend Fit","Optimistic Trend Fit"),
col = c(1,"red","blue","green","pink"),
lty = c(NA,1,2,3,4),
lwd = c(1,1,1,1,1),
pch = c(1,NA,NA,NA,NA),
cex=0.85)
#  datasetOptimist <- datasetone;
athedates <- thedates[c(1:length(thedates)) %% 7 == 1]
cn = 5
thepeakdates <- character(6);
countryNumber <- cn
mainName <- names(totaldeaths[countryNumber])
datsetone <- as.numeric(time_covid19CountryPerc[names(totaldeaths[countryNumber]),])
thedates <- colnames(time_covid19CountryPerc)[datsetone > 0.0]
thedates <- str_replace(thedates,"X","")
thedates <- str_replace_all(thedates,"\\.","/")
thedates <- as.Date(thedates,"%m/%d/%Y")
thedates <- as.Date(str_replace(thedates,"0020-","2020-"))
datsetone <- datsetone[datsetone > 0.0]
lastobs <- length(datsetone)
datsetchange <- c(datsetone[1],datsetone[2:lastobs]-datsetone[1:(lastobs-1)])
datsetchange[datsetchange < 0] <- 0;
datasetone <- as.data.frame(cbind(days=c(1:lastobs),fatalities = datsetone,newfatalities = datsetchange))
filteredNewFatalities <-  runmed(datasetone$newfatalities,5)
#  lastobs <- nrow(datasetone) - 1;
numdays <- min(lastobs,which.max(filteredNewFatalities)+14)
if (numdays < (lastobs-7))
{
#    numdays <- which.max(filteredNewFatalities)
if (max(datasetone$fatalities) < 0.3)
{
gain <- 0.25/max(datasetone$fatalities);
datasetone$fatalities <- gain*datasetone$fatalities;
datasetone$newfatalities <- gain*datasetone$newfatalities;
covid19_datapopulation[mainName,"ExpectedFatalities"] <- covid19_datapopulation[mainName,"ExpectedFatalities"]/gain;
}
}
plot(datasetone$newfatalities,main=paste("New Deaths:",mainName),xlab="Days since deaths>0",ylab="Fraction of expected deaths")
startday <- max(1,(numdays - daysWindow))
daysrange <- c(startday:(lastobs))
cdffitglobal <- logisitcfit(datasetone[1:numdays,],-0.075,numdays,5)
lines(logisticpdf(c(1:length(datsetone)),cdffitglobal$ro,cdffitglobal$to)/cdffitglobal$defecitRatio,lty=2,col="blue")
cdffit <- logisitcfit(datasetone,
cdffitglobal$ro,
cdffitglobal$to,
2*cdffitglobal$defecitRatio,
adjini=cdffitglobal$defecitRatio,
daysrange=daysrange)
lines(cdffit$filterpdf,lty=1,col="red")
if (inherits(cdffit, "try-error"))
{
startday <- max(1,(numdays - daysWindow -7))
daysrange <- c(startday:(lastobs))
cdffit <- logisitcfit(datasetone,cdffitglobal$ro,cdffitglobal$to,2*cdffitglobal$defecitRatio,adjini=cdffitglobal$defecitRatio,daysrange=daysrange)
}
#  lines(logisticpdf(c(1:length(datsetone)),cdffit$ro,cdffit$to)/cdffit$adjust,lty=5,col="green")
#  daystopeak <- cdffit$to-lastobs
#  if (daystopeak <= -14)
#  {
#    pstartday <- as.integer(max(1,lastobs - 2.0*daysWindow))
#    pdaysrange <- c(pstartday:(lastobs))
#    daysrange <- pdaysrange
#    cdffitn <- logisitcfit(datasetone,cdffit$ro,cdffit$to,2*cdffit$defecitRatio,cdffit$defecitRatio,daysrange=pdaysrang#e)
#    if (!inherits(cdffitn, "try-error"))
#    {
#      cdffit <- cdffitn;
#    }
#  }
lines(logisticpdf(c(1:length(datsetone)),cdffit$ro,cdffit$to)/cdffit$defecitRatio,lty=3,col="green")
#  if (numdays ==  lastobs)
#  {
datasetOptimist <- datasetone;
maxgain <- min(0.9/max(datasetOptimist$fatalities),optGain);
datasetOptimist$fatalities <- maxgain*datasetOptimist$fatalities;
datasetOptimist$newfatalities <- maxgain*datasetOptimist$newfatalities;
cdffitglobal2 <- logisitcfit(datasetOptimist,-0.075,numdays,2)
cdffit2 <- logisitcfit(datasetOptimist,cdffitglobal2$ro,cdffitglobal2$to,2*cdffitglobal2$defecitRatio,adjini=cdffitglobal2$defecitRatio,daysrange=daysrange)
if (!inherits(cdffit2, "try-error"))
{
lines(logisticpdf(c(1:length(datsetone)),cdffit2$ro,cdffit2$to)/cdffit2$defecitRatio/maxgain,lty=4,col="pink")
}
#}
legend("topleft",
legend = c("New Fatalities","Smooth","Global Fit","Last Trend Fit","Optimistic Trend Fit"),
col = c(1,"red","blue","green","pink"),
lty = c(NA,1,2,3,4),
lwd = c(1,1,1,1,1),
pch = c(1,NA,NA,NA,NA),
cex=0.85)
daysrange <- c(startday:(lastobs))
cdffitglobal <- logisitcfit(datasetone[1:numdays,],-0.075,numdays,5)
cdffit <- logisitcfit(datasetone,
cdffitglobal$ro,
cdffitglobal$to,
2*cdffitglobal$defecitRatio,
adjini=cdffitglobal$defecitRatio,
daysrange=daysrange)
lines(cdffit$filterpdf,lty=1,col="red")
cdffitglobal$defecitRatio
cdffitglobal$defecitRatio
source('~/GitHub/COVIDTrends/COVID_Forecasting/logfunctions.r')
startday <- max(1,(numdays - daysWindow))
daysrange <- c(startday:(lastobs))
cdffitglobal <- logisitcfit(datasetone[1:numdays,],-0.075,numdays,5)
plot(datasetone$newfatalities,main=paste("New Deaths:",mainName),xlab="Days since deaths>0",ylab="Fraction of expected deaths")
startday <- max(1,(numdays - daysWindow))
daysrange <- c(startday:(lastobs))
cdffitglobal <- logisitcfit(datasetone[1:numdays,],-0.075,numdays,5)
lines(logisticpdf(c(1:length(datsetone)),cdffitglobal$ro,cdffitglobal$to)/cdffitglobal$defecitRatio,lty=2,col="blue")
cdffit <- logisitcfit(datasetone,
cdffitglobal$ro,
cdffitglobal$to,
2*cdffitglobal$defecitRatio,
adjini=cdffitglobal$defecitRatio,
daysrange=daysrange)
lines(cdffit$filterpdf,lty=1,col="red")
cdffitglobal$ro
daysrange
source('~/GitHub/COVIDTrends/COVID_Forecasting/logfunctions.r')
cdffitglobal <- logisitcfit(datasetone[1:numdays,],-0.075,numdays,5)
lines(logisticpdf(c(1:length(datsetone)),cdffitglobal$ro,cdffitglobal$to)/cdffitglobal$defecitRatio,lty=2,col="blue")
cdffit <- logisitcfit(datasetone,
cdffitglobal$ro,
cdffitglobal$to,
2*cdffitglobal$defecitRatio,
adjini=cdffitglobal$defecitRatio,
daysrange=daysrange)
source('~/GitHub/COVIDTrends/COVID_Forecasting/logfunctions.r')
source('~/GitHub/COVIDTrends/COVID_Forecasting/logfunctions.r')
cdffit <- logisitcfit(datasetone,
cdffitglobal$ro,
cdffitglobal$to,
2*cdffitglobal$defecitRatio,
adjini=cdffitglobal$defecitRatio,
daysrange=daysrange)
source('~/GitHub/COVIDTrends/COVID_Forecasting/logfunctions.r')
cdffit <- logisitcfit(datasetone,
cdffitglobal$ro,
cdffitglobal$to,
2*cdffitglobal$defecitRatio,
adjini=cdffitglobal$defecitRatio,
daysrange=daysrange)
startday <- max(1,(numdays - daysWindow))
daysrange <- c(startday:(lastobs))
cdffitglobal <- logisitcfit(datasetone[1:numdays,],-0.075,numdays,5)
source('~/GitHub/COVIDTrends/COVID_Forecasting/logfunctions.r')
source('~/GitHub/COVIDTrends/COVID_Forecasting/logfunctions.r')
cdffitglobal <- logisitcfit(datasetone[1:numdays,],-0.075,numdays,5)
cdffit <- logisitcfit(datasetone,
cdffitglobal$ro,
cdffitglobal$to,
2*cdffitglobal$defecitRatio,
adjini=cdffitglobal$defecitRatio,
daysrange=daysrange)
source('~/GitHub/COVIDTrends/COVID_Forecasting/logfunctions.r')
cdffitglobal <- logisitcfit(datasetone[1:numdays,],-0.075,numdays,5)
source('~/GitHub/COVIDTrends/COVID_Forecasting/logfunctions.r')
source('~/GitHub/COVIDTrends/COVID_Forecasting/logfunctions.r')
cdffitglobal <- logisitcfit(datasetone[1:numdays,],-0.075,numdays,5)
cdffit <- logisitcfit(datasetone,
cdffitglobal$ro,
cdffitglobal$to,
2*cdffitglobal$defecitRatio,
adjini=cdffitglobal$defecitRatio,
daysrange=daysrange)
source('~/GitHub/COVIDTrends/COVID_Forecasting/logfunctions.r')
cdffitglobal <- logisitcfit(datasetone[1:numdays,],-0.075,numdays,5)
lines(logisticpdf(c(1:length(datsetone)),cdffitglobal$ro,cdffitglobal$to)/cdffitglobal$defecitRatio,lty=2,col="blue")
cdffit <- logisitcfit(datasetone,
cdffitglobal$ro,
cdffitglobal$to,
2*cdffitglobal$defecitRatio,
adjini=cdffitglobal$defecitRatio,
daysrange=daysrange)
thepeakdates <- character(6);
countryNumber <- cn
mainName <- names(totaldeaths[countryNumber])
datsetone <- as.numeric(time_covid19CountryPerc[names(totaldeaths[countryNumber]),])
thedates <- colnames(time_covid19CountryPerc)[datsetone > 0.0]
thedates <- str_replace(thedates,"X","")
thedates <- str_replace_all(thedates,"\\.","/")
thedates <- as.Date(thedates,"%m/%d/%Y")
thedates <- as.Date(str_replace(thedates,"0020-","2020-"))
datsetone <- datsetone[datsetone > 0.0]
lastobs <- length(datsetone)
datsetchange <- c(datsetone[1],datsetone[2:lastobs]-datsetone[1:(lastobs-1)])
datsetchange[datsetchange < 0] <- 0;
datasetone <- as.data.frame(cbind(days=c(1:lastobs),fatalities = datsetone,newfatalities = datsetchange))
filteredNewFatalities <-  runmed(datasetone$newfatalities,5)
#  lastobs <- nrow(datasetone) - 1;
numdays <- min(lastobs,which.max(filteredNewFatalities)+14)
if (numdays < (lastobs-7))
{
#    numdays <- which.max(filteredNewFatalities)
if (max(datasetone$fatalities) < 0.3)
{
gain <- 0.25/max(datasetone$fatalities);
datasetone$fatalities <- gain*datasetone$fatalities;
datasetone$newfatalities <- gain*datasetone$newfatalities;
covid19_datapopulation[mainName,"ExpectedFatalities"] <- covid19_datapopulation[mainName,"ExpectedFatalities"]/gain;
}
}
plot(datasetone$newfatalities,main=paste("New Deaths:",mainName),xlab="Days since deaths>0",ylab="Fraction of expected deaths")
startday <- max(1,(numdays - daysWindow))
daysrange <- c(startday:(lastobs))
cdffitglobal <- logisitcfit(datasetone[1:numdays,],-0.075,numdays,5)
lines(logisticpdf(c(1:length(datsetone)),cdffitglobal$ro,cdffitglobal$to)/cdffitglobal$defecitRatio,lty=2,col="blue")
plot(datasetone$newfatalities,main=paste("New Deaths:",mainName),xlab="Days since deaths>0",ylab="Fraction of expected deaths")
startday <- max(1,(numdays - daysWindow))
daysrange <- c(startday:(lastobs))
cdffitglobal <- logisitcfit(datasetone[1:numdays,],-0.075,numdays,5)
lines(logisticpdf(c(1:length(datsetone)),cdffitglobal$ro,cdffitglobal$to)/cdffitglobal$defecitRatio,lty=2,col="blue")
cdffit <- logisitcfit(datasetone,
cdffitglobal$ro,
cdffitglobal$to,
2*cdffitglobal$defecitRatio,
adjini=cdffitglobal$defecitRatio,
daysrange=daysrange)
source('~/GitHub/COVIDTrends/COVID_Forecasting/logfunctions.r')
cdffitglobal <- logisitcfit(datasetone[1:numdays,],-0.075,numdays,5)
lines(logisticpdf(c(1:length(datsetone)),cdffitglobal$ro,cdffitglobal$to)/cdffitglobal$defecitRatio,lty=2,col="blue")
cdffit <- logisitcfit(datasetone,
cdffitglobal$ro,
cdffitglobal$to,
2*cdffitglobal$defecitRatio,
adjini=cdffitglobal$defecitRatio,
daysrange=daysrange)
lines(cdffit$filterpdf,lty=1,col="red")
if (inherits(cdffit, "try-error"))
{
startday <- max(1,(numdays - daysWindow -7))
daysrange <- c(startday:(lastobs))
cdffit <- logisitcfit(datasetone,cdffitglobal$ro,cdffitglobal$to,2*cdffitglobal$defecitRatio,adjini=cdffitglobal$defecitRatio,daysrange=daysrange)
}
#  {
#    pstartday <- as.integer(max(1,lastobs - 2.0*daysWindow))
#    pdaysrange <- c(pstartday:(lastobs))
#    daysrange <- pdaysrange
#    cdffitn <- logisitcfit(datasetone,cdffit$ro,cdffit$to,2*cdffit$defecitRatio,cdffit$defecitRatio,daysrange=pdaysrang#e)
#    if (!inherits(cdffitn, "try-error"))
#    {
#      cdffit <- cdffitn;
#    }
#  }
lines(logisticpdf(c(1:length(datsetone)),cdffit$ro,cdffit$to)/cdffit$defecitRatio,lty=3,col="green")
